import RPi.GPIO as gpio
import threading
import queue
import time

HOW_MANY_MESSAGES =10
mq = queue.Queue(HOW_MANY_MESSAGES)

button_pin      = 22
led_red_pin     = 17
led_green_pin   = 27
led_blue_pin    = 23
led_white_pin   = 24
led_yellow_pin  = 18
servo_pin       = 19

cnt_button = 0
def buttonPressed(channel):
	global cnt_button
	cnt_button = cnt_button + 1
	print(cnt_button)
	if cnt_button == 4: 
		cnt_button = 0
	mq.put(cnt_button)

gpio.setmode(gpio.BCM)

gpio.setup(led_red_pin, gpio.OUT)
gpio.setup(led_green_pin, gpio.OUT)
gpio.setup(led_blue_pin, gpio.OUT)
gpio.setup(led_white_pin, gpio.OUT)
gpio.setup(led_yellow_pin, gpio.OUT)
gpio.setup(servo_pin, gpio.OUT)

gpio.output(led_red_pin, False)
gpio.output(led_green_pin, False)
gpio.output(led_blue_pin, False)
gpio.output(led_white_pin, False)

gpio.setup(button_pin, gpio.IN)
gpio.add_event_detect(button_pin, gpio.RISING, callback=buttonPressed, bouncetime=300)

pwm_yellow = gpio.PWM(led_yellow_pin, 1000.0)
pwm_yellow.start(0.0) 

pwm_servo = gpio.PWM(servo_pin, 50)
pwm_servo.start(3.0)

flag_exit = False
def t1_main():
	while True:
		gpio.output(led_white_pin, True)
		time.sleep(0.6)	
		gpio.output(led_white_pin, False)
		time.sleep(0.6)
		if flag_exit: break

def t2_main():
	while True:
		for br_yellow in range(0, 1024):
			pwm_yellow.ChangeDutyCycle(br_yellow*100//1024)
			time.sleep(0.001)
		for br_yellow in range(1024, 0, -1):
			pwm_yellow.ChangeDutyCycle(br_yellow*100//1024)
			time.sleep(0.001)
		if flag_exit: break

def t3_main():
	while True:
		userInput = input("Servo Motor : ")
		print(userInput)
		if userInput == "q":
			pwm_servo.ChangeDutyCycle(3.0)
		elif userInput == "w":
			pwm_servo.ChangeDutyCycle(7.75)
		elif userInput == "e":
			pwm_servo.ChangeDutyCycle(12)		
		time.sleep(1.0)	
		pwm_servo.ChangeDutyCycle(0.0)
		if flag_exit: break
		
t1 = threading.Thread(target=t1_main)
t1.start()
t2 = threading.Thread(target=t2_main)
t2.start()
t3 = threading.Thread(target=t3_main)
t3.start()

try:
	while True:
		cnt = mq.get()
		if cnt == 0:
			gpio.output(led_red_pin, True)
		elif cnt == 1:
			gpio.output(led_green_pin, True)
		elif cnt == 2:
			gpio.output(led_blue_pin, True)
		elif cnt == 3:
			gpio.output(led_red_pin, False)
			gpio.output(led_green_pin, False)
			gpio.output(led_blue_pin, False)
		
except KeyboardInterrupt:
	pass
	
flag_exit = True
t1.join()
t2.join()
t3.join()

pwm_servo.ChangeDutyCycle(3.0)
time.sleep(1.0)
pwm_servo.ChangeDutyCycle(0.0)

pwm_yellow.stop()
pwm_servo.stop()
gpio.cleanup()


	
